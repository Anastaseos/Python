KILOMETER CONVERTER

Write a program that asks the user to enter a distance in kilometers, and then converts that
distance to miles. The conversion formula is as follows:

def km_to_miles():
    km = float(input("Enter km: "))
    miles = km * 0.6213
    return miles


def main():
    miles = km_to_miles()
    print("The distance in miles is:", miles)

main()

______________________________________________________________________________________________
HOW MUCH INSURANCE

Many financial experts advise that property owners should insure their homes or buildings
for at least 80 percent of the amount it would cost to replace the structure. Write a pro-
gram that asks the user to enter the replacement cost of a building and then displays the
minimum amount of insurance he or she should buy for the property.

def insurance():
     worth = float(input("Enter worth of the Estate: "))
     insurance = worth * 0.8
     return insurance
def main():
     min_insurance = insurance()
     print(min_insurance)
main()

______________________________________________________________________________________________
AUTOMOBILE COSTS

Write a program that asks the user to enter the monthly costs for the following expenses
incurred from operating his or her automobile: loan payment, insurance, gas, oil, tires, and
maintenance. The program should then display the total monthly cost of these expenses,
and the total annual cost of these expenses.

def monthly_expenses():
    loan = float(input("Enter loan payment: "))
    insurance = float(input("Enter insurance payment: "))
    gas = float(input("Enter Gas: "))
    oil = float(input("Enter oil cost: "))
    tires = float(input("Enter tires cost: "))
    maintenance = float(input("Enter maintenance cost: "))
    total = loan + insurance + gas + oil + tires + maintenance
    return total

def main():
    total_montly_cost = monthy_expenses()
    print(total_montly_cost)
main()

______________________________________________________________________________________________
PROPERTY TAX

A county collects property taxes on the assessment value of property, which is 60 percent
of the property’s actual value. For example, if an acre of land is valued at $10,000, its
assessment value is $6,000. The property tax is then 72¢ for each $100 of the assessment value. 
The tax for the acre assessed at $6,000 will be $43.20. Write a program that asks for
the actual value of a piece of property and displays the assessment value and property tax.

def value():
    property_value = float(input("Enter property value: "))
    assessment = property_value * 0.6
    property_tax = assessment * 0.72 / 100
    return assessment, property_tax

def main():
    property_tax, assessment = value()
    print("Assessment value is", property_tax)
    print("Property tax is", assessment)

main()

______________________________________________________________________________________________
CALORIES FROM FATS AND CARBOHYDRATES

A nutritionist who works for a fitness club helps members by evaluating their diets. As part
of her evaluation, she asks members for the number of fat grams and carbohydrate grams
that they consumed in a day. Then, she calculates the number of calories that result from
the fat, using the following formula:

calories from fat = fat grams x 9

Next, she calculates the number of calories that result from the carbohydrates, using the
following formula:

calories from carbs = carb grams x 4

The nutritionist asks you to write a program that will make these calculations.


def calories_from_fat(fat_grams):
    return fat_grams * 9

def calories_from_carbs(carb_grams):
    return carb_grams * 4

def main():
    while True:
         choice = input("Select 1 for Fats, 2 for Carbs, or 3 to Exit: ")
         if choice == "1":
             fat_grams = float(input("Enter the amount of fat in grams: "))
             print(f"{fat_grams} grams of fat == {calories_from_fat(fat_grams):.1f} calories")
         elif choice == "2":
             carb_grams = float(input("Enter the amount of carbohydrates in grams: "))
             print(f"{carb_grams} grams of carbs == {calories_from_carbs(carb_grams):.1f} calories")
         elif choice == "3":
             print("Exiting...")
             break
         else:
             print("Invalid choice. Please choose 1, 2 or 3.")

main()

______________________________________________________________________________________________
STADIUM SEATING

There are three seating categories at a stadium. For a softball game, Class A seats cost $20,
Class B seats cost $15, and Class C seats cost $10. Write a program that asks how many
tickets for each class of seats were sold, and then displays the amount of income generated
from ticket sales.


def calculate_income(class_a_tickets, class_b_tickets, class_c_tickets):
    class_a_income = class_a_tickets * 20
    class_b_income = class_b_tickets * 15
    class_c_income = class_c_tickets * 10

    total_income = class_a_income + class_b_income + class_c_income
    return total_income


def main():
    class_a_tickets = int(input("Enter the number of Class A tickets sold: "))
    class_b_tickets = int(input("Enter the number of Class B tickets sold: "))
    class_c_tickets = int(input("Enter the number of Class C tickets sold: "))

    total_income = calculate_income(class_a_tickets, class_b_tickets, class_c_tickets)

    print(f"Total income generated from ticket sales is ${total_income}")

main()

______________________________________________________________________________________________
MONTHLY SALES TAX

A retail company must file a monthly sales tax report listing the total sales for the month,
and the amount of state and county sales tax collected. The state sales tax rate is 5 percent
and the county sales tax rate is 2.5 percent. Write a program that asks the user to enter the
total sales for the month. From this figure, the application should calculate and display the
following:
• The amount of county sales tax
• The amount of state sales tax
• The total sales tax (county plus state)


state_tax = 0.05
county_tax = 0.025

def main():
    total_sales = float(input("Enter total sales: "))
    county_sales_tax = total_sales * county_tax
    state_sales_tax = total_sales * state_tax
    total_sales_tax = county_sales_tax + state_sales_tax

    print(county_sales_tax)
    print(state_sales_tax)
    print(total_sales_tax)

main()

______________________________________________________________________________________________
FEET TO INCHES

One foot equals 12 inches. Write a function named feet_to_inches that accepts a number
of feet as an argument and returns the number of inches in that many feet. Use the function
in a program that prompts the user to enter a number of feet and then displays the number
of inches in that many feet.

def feet_to_inches(feet):
    return feet * 12

def main():
    feet = int(input("Enter number of feet: "))
    feet = feet_to_inches(feet)
    print(feet)

main()

______________________________________________________________________________________________
MATH QUIZ

Write a program that gives simple math quizzes. The program should display two random
numbers that are to be added, such as:
247
+ 129
The program should allow the student to enter the answer. If the answer is correct, a message
of congratulations should be displayed. If the answer is incorrect, a message showing
the correct answer should be displayed.


import random

OPERATORS = ["+", "-", "*", "/"]
MIN_NUMBER = 1
MAX_NUMBER = 100


def generated_questions():
    num1 = random.randint(MIN_NUMBER, MAX_NUMBER)
    num2 = random.randint(MIN_NUMBER, MAX_NUMBER)
    operator = random.choice(OPERATORS)
    question = f"What is {num1} {operator} {num2}"
    return (question, eval(str(num1) + operator + str(num2)))


def main():
    print("Welcome to my math quiz!")
    number_of_questions = int(input("How many questions?  "))
    score = 0

    for i in range(number_of_questions):
        question, answer = generated_questions()
        print(question + "?")
        user_answer = int(input())
        if user_answer == answer:
            print("Correct!")
            score += 1
        else:
            print("Incorrect")

    print(f"You got {score} / {number_of_questions} questions correct!")


if __name__ == "__main__":
    main()

______________________________________________________________________________________________
MAX OF TWO VALUES

Write a function named max that accepts two integer values as arguments and returns the
value that is the greater of the two. For example, if 7 and 12 are passed as arguments to
the function, the function should return 12. Use the function in a program that prompts the
user to enter two integer values. The program should display the value that is the greater
of the two.


def max(x, y):
    if x > y:
        return x
    else:
        return y

def main():
    x = int(input("Enter a number: "))
    y = int(input("Enter a number: "))
    max_number = max(x, y)
    print(max_number)

main()

______________________________________________________________________________________________
FALLING DISTANCE

When an object is falling because of gravity, the following formula can be used to determine
the distance the object falls in a specific time period:

D = 1/2 * g * time^2

The variables in the formula are as follows: d is the distance in meters, g is 9.8, and t is the
amount of time, in seconds, that the object has been falling.

Write a function named falling_distance that accepts an object’s falling time (in seconds)
as an argument. The function should return the distance, in meters, that the object
has fallen during that time interval. Write a program that calls the function in a loop that
passes the values 1 through 10 as arguments and displays the return value.


def falling_distance(time):
    g = 9.8
    distance = 0.5 * g * time**2
    return distance

def main():
    for time in range(1, 11):  
        distance = falling_distance(time)
        print(f"The object would fall {distance:.2f} meters in {time} seconds.")

main()

______________________________________________________________________________________________
KINETIC ENERGY

In physics, an object that is in motion is said to have kinetic energy. The following formula
can be used to determine a moving object’s kinetic energy:

KE = 1/2 * mv^2

The variables in the formula are as follows: KE is the kinetic energy, m is the object’s mass
in kilograms, and v is the object’s velocity in meters per second.

Write a function named kinetic_energy that accepts an object’s mass (in kilograms) and
velocity (in meters per second) as arguments. The function should return the amount of
kinetic energy that the object has. Write a program that asks the user to enter values for
mass and velocity, and then calls the kinetic_energy function to get the object’s kinetic
energy.

def kinetic_energy(mass, velocity):
    KE = 0.5 * mass * velocity**2
    return KE

def main():
    mass = float(input("Enter mass: "))
    velocity = float(input("Enter velocity: "))
    total_kinetic = kinetic_energy(mass, velocity)
    print(total_kinetic)

main()

______________________________________________________________________________________________
TEST AVERAGE AND GRADE

Write a program that asks the user to enter five test scores. The program should display a
letter grade for each score and the average test score. Write the following functions in the
program:
• calc_average—This function should accept five test scores as arguments and return
the average of the scores.

• determine_grade—This function should accept a test score as an argument and return
a letter grade for the score based on the following grading scale:
Score Letter Grade
90–100     A
80–89      B
70–79      C
60–69      D
Below 60   F


def calculate_average(grades):
    return sum(grades) / len(grades)

def determine_grade(test_score):
    if test_score < 60:
        return "F"
    elif 60 <= test_score <= 69:
        return "D"
    elif 70 <= test_score <= 79:
        return "C"
    elif 80 <= test_score <= 89:
        return "B"
    else:
        return "A"

def main():
    scores = []
    for i in range(1, 6):
        score = float(input("Enter test grade: "))
        scores.append(score)
        print(f"The grade is {determine_grade(score)}")

    print(f"The average score is {calculate_average(scores)}")

main()

______________________________________________________________________________________________
ODD / EVEN COUNTER

Write a program that generates 100 random numbers and keeps
a count of how many of those random numbers are even and how many of them are odd.


import random

def numbers(n):
    odd = 0
    even = 0

    for i in range(n):
        number = random.randint(1, 100)
        if number % 2 == 0:
            even += 1
        else:
            odd += 1

    return even, odd


def main():
    even, odd = numbers(100)
    print(f"There are {even} even numbers and {odd} odd numbers ")

main()

______________________________________________________________________________________________
PRIME NUMBERS

A prime number is a number that is only evenly divisible by itself and 1. For example, the
number 5 is prime because it can only be evenly divided by 1 and 5. The number 6, however,
is not prime because it can be divided evenly by 1, 2, 3, and 6.
Write a Boolean function named is_prime which takes an integer as an argument and
returns true if the argument is a prime number, or false otherwise. Use the function in a
program that prompts the user to enter a number and then displays a message indicating
whether the number is prime.

def is_prime(integer):
    if integer < 2:
        return False
    elif integer == 2:
        return True
    for i in range(2, integer):
        if integer % i == 0:
            return False
        return True


def main():
    number = int(input("Enter a number: "))
    if is_prime(number):
        print(f"{number} is  prime")
    else:
        print(f"{number} is not prime.")

main()
______________________________________________________________________________________________
PRIME NUMBER LIST

Write another program that displays all of the prime numbers from 1 to 100.
The program should have a loop that calls the is_prime function.

def is_prime(integer):
    if integer < 2:
        return False
    elif integer == 2:
        return True
    for i in range(2, integer):
        if integer % i == 0:
            return False
        return True


def main():
    for number in range(1, 101):
        if is_prime(number):
            print(number)

main()

______________________________________________________________________________________________
FUTURE VALUE

Suppose you have a certain amount of money in a savings account that earns compound
monthly interest, and you want to calculate the amount that you will have after a specific
number of months. The formula is as follows

F = P X (1 + i)^t
The terms in the formula are:
• F is the future value of the account after the specified time period.
• P is the present value of the account.
• i is the monthly interest rate.
• t is the number of months.

Write a program that prompts the user to enter the account’s present value, monthly interest
rate, and the number of months that the money will be left in the account. The program
should pass these values to a function that returns the future value of the account, after the
specified number of months. The program should display the account’s future value.


def future_value(P, i, t):
    F = P * ((1 + i) **t)
    return F

def main():
    P = float(input("Enter present value: "))
    i = float(input("Enter monthly interest rate in decimal format: "))
    t = int(input("Enter number of months: "))

    F = future_value(P, i, t)

    print("The future value will be: ", round(F, 2))

main()

______________________________________________________________________________________________
RANDOM NUMBER GUESSING GAME











